// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using demoprob.Context;

#nullable disable

namespace demoprob.Entities2
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20251024184724_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("demoprob.Entities2.material", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("cost_per_unit")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)");

                    b.Property<decimal>("current_stock")
                        .HasPrecision(15, 4)
                        .HasColumnType("numeric(15,4)");

                    b.Property<string>("material_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("material_type_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("min_stock_level")
                        .HasPrecision(15, 4)
                        .HasColumnType("numeric(15,4)");

                    b.Property<decimal>("package_quantity")
                        .HasPrecision(15, 4)
                        .HasColumnType("numeric(15,4)");

                    b.Property<string>("unit_of_measure")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("id")
                        .HasName("materials_pkey");

                    b.HasIndex(new[] { "material_type_id" }, "idx_materials_type");

                    b.HasIndex(new[] { "material_name" }, "materials_material_name_key")
                        .IsUnique();

                    b.ToTable("materials");
                });

            modelBuilder.Entity("demoprob.Entities2.material_supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("material_id")
                        .HasColumnType("integer");

                    b.Property<int>("supplier_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("material_suppliers_pkey");

                    b.HasIndex(new[] { "material_id" }, "idx_materials_suppliers_material");

                    b.HasIndex(new[] { "supplier_id" }, "idx_materials_suppliers_supplier");

                    b.HasIndex(new[] { "material_id", "supplier_id" }, "material_suppliers_material_id_supplier_id_key")
                        .IsUnique();

                    b.ToTable("material_suppliers");
                });

            modelBuilder.Entity("demoprob.Entities2.material_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("defect_percentage")
                        .HasPrecision(5, 4)
                        .HasColumnType("numeric(5,4)");

                    b.Property<string>("type_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id")
                        .HasName("material_types_pkey");

                    b.HasIndex(new[] { "type_name" }, "material_types_type_name_key")
                        .IsUnique();

                    b.ToTable("material_types");
                });

            modelBuilder.Entity("demoprob.Entities2.product", b =>
                {
                    b.Property<string>("article_number")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<decimal>("min_partner_price")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("product_type_id")
                        .HasColumnType("integer");

                    b.Property<decimal?>("roll_width")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("article_number")
                        .HasName("products_pkey");

                    b.HasIndex(new[] { "product_type_id" }, "idx_products_type");

                    b.ToTable("products");
                });

            modelBuilder.Entity("demoprob.Entities2.product_material", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("material_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("material_quantity")
                        .HasPrecision(15, 4)
                        .HasColumnType("numeric(15,4)");

                    b.Property<string>("product_article")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id")
                        .HasName("product_materials_pkey");

                    b.HasIndex(new[] { "material_id" }, "idx_product_materials_material");

                    b.HasIndex(new[] { "product_article" }, "idx_product_materials_product");

                    b.HasIndex(new[] { "product_article", "material_id" }, "product_materials_product_article_material_id_key")
                        .IsUnique();

                    b.ToTable("product_materials");
                });

            modelBuilder.Entity("demoprob.Entities2.product_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("production_coefficient")
                        .HasPrecision(10, 4)
                        .HasColumnType("numeric(10,4)");

                    b.Property<string>("type_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id")
                        .HasName("product_types_pkey");

                    b.HasIndex(new[] { "type_name" }, "product_types_type_name_key")
                        .IsUnique();

                    b.ToTable("product_types");
                });

            modelBuilder.Entity("demoprob.Entities2.supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("inn")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<int>("rating")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("start_date")
                        .HasColumnType("date");

                    b.Property<string>("supplier_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("supplier_type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("id")
                        .HasName("suppliers_pkey");

                    b.HasIndex(new[] { "inn" }, "suppliers_inn_key")
                        .IsUnique();

                    b.HasIndex(new[] { "supplier_name" }, "suppliers_supplier_name_key")
                        .IsUnique();

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("demoprob.Entities2.material", b =>
                {
                    b.HasOne("demoprob.Entities2.material_type", "material_type")
                        .WithMany("materials")
                        .HasForeignKey("material_type_id")
                        .IsRequired()
                        .HasConstraintName("materials_material_type_id_fkey");

                    b.Navigation("material_type");
                });

            modelBuilder.Entity("demoprob.Entities2.material_supplier", b =>
                {
                    b.HasOne("demoprob.Entities2.material", "material")
                        .WithMany("material_suppliers")
                        .HasForeignKey("material_id")
                        .IsRequired()
                        .HasConstraintName("material_suppliers_material_id_fkey");

                    b.HasOne("demoprob.Entities2.supplier", "supplier")
                        .WithMany("material_suppliers")
                        .HasForeignKey("supplier_id")
                        .IsRequired()
                        .HasConstraintName("material_suppliers_supplier_id_fkey");

                    b.Navigation("material");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("demoprob.Entities2.product", b =>
                {
                    b.HasOne("demoprob.Entities2.product_type", "product_type")
                        .WithMany("products")
                        .HasForeignKey("product_type_id")
                        .IsRequired()
                        .HasConstraintName("products_product_type_id_fkey");

                    b.Navigation("product_type");
                });

            modelBuilder.Entity("demoprob.Entities2.product_material", b =>
                {
                    b.HasOne("demoprob.Entities2.material", "material")
                        .WithMany("product_materials")
                        .HasForeignKey("material_id")
                        .IsRequired()
                        .HasConstraintName("product_materials_material_id_fkey");

                    b.HasOne("demoprob.Entities2.product", "product_articleNavigation")
                        .WithMany("product_materials")
                        .HasForeignKey("product_article")
                        .IsRequired()
                        .HasConstraintName("product_materials_product_article_fkey");

                    b.Navigation("material");

                    b.Navigation("product_articleNavigation");
                });

            modelBuilder.Entity("demoprob.Entities2.material", b =>
                {
                    b.Navigation("material_suppliers");

                    b.Navigation("product_materials");
                });

            modelBuilder.Entity("demoprob.Entities2.material_type", b =>
                {
                    b.Navigation("materials");
                });

            modelBuilder.Entity("demoprob.Entities2.product", b =>
                {
                    b.Navigation("product_materials");
                });

            modelBuilder.Entity("demoprob.Entities2.product_type", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("demoprob.Entities2.supplier", b =>
                {
                    b.Navigation("material_suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
